class Solution {
    String s = "";
    public boolean exist(char[][] board, String word) {
        if(board==null||board[0].length==0||board.length==0|| word==null){
            return false;
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if(canIMatch(board, i, j, word,0)){ 
                    return true;
                }
            }   
        }
            
        return false;
       
    }
    public  boolean canIMatch(char[][] board,int i,int j,String word,int index){
        if (word.length()==index) {
            return true;
        }
        if (i < 0 || j < 0 || i >= board.length || j >= board[0].length ||board[i][j] != word.charAt(index)) {
            return false;
        }
        board[i][j]='0';
        boolean result = canIMatch(board ,i+1, j, word, index+1)||canIMatch(board ,i, j+1, word, index+1) || canIMatch(board ,i-1, j, word, index+1)||canIMatch(board ,i, j-1, word, index+1);
        board[i][j] = word.charAt(index);
        // if(board[i][j]==temp){
        //     System.out.println(temp);
        //     System.out.println(board[i][j]);
        //     return true;
        // }
        return result;
    }

}
